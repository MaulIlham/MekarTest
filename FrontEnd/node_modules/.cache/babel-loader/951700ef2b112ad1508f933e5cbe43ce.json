{"ast":null,"code":"import _toConsumableArray from \"/home/enigmacamp/Materi/MateriPascal/Tugas Akhir/asd/final-project/FrontEnd/Web/LelangAja/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/enigmacamp/Materi/MateriPascal/Tugas Akhir/asd/final-project/FrontEnd/Web/LelangAja/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { DETAIL_DATA, FETCH_DATA, FETCH_COMPLETE } from './Action';\nvar initialState = {\n  rooms: [],\n  users: [],\n  items: []\n};\nexport default function DashboardReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case DETAIL_DATA:\n      var category = state.categories.find(function (category) {\n        return category.id === payload;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        form: category\n      });\n\n    case FETCH_COMPLETE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categories: _toConsumableArray(payload),\n        isLoading: false\n      });\n\n    case FETCH_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n}","map":{"version":3,"sources":["/home/enigmacamp/Materi/MateriPascal/Tugas Akhir/asd/final-project/FrontEnd/Web/LelangAja/src/reducer/DashboardReducer.js"],"names":["DETAIL_DATA","FETCH_DATA","FETCH_COMPLETE","initialState","rooms","users","items","DashboardReducer","state","action","type","payload","category","categories","find","id","form","isLoading"],"mappings":";;AAAA,SACIA,WADJ,EAEIC,UAFJ,EAGIC,cAHJ,QAIO,UAJP;AAMA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,eAAe,SAASC,gBAAT,GAAwD;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;AAAA,MAC3DC,IAD2D,GACzCD,MADyC,CAC3DC,IAD2D;AAAA,MACrDC,OADqD,GACzCF,MADyC,CACrDE,OADqD;;AAGnE,UAAQD,IAAR;AACI,SAAKV,WAAL;AACI,UAAMY,QAAQ,GAAGJ,KAAK,CAACK,UAAN,CAAiBC,IAAjB,CAAsB,UAACF,QAAD;AAAA,eAAcA,QAAQ,CAACG,EAAT,KAAgBJ,OAA9B;AAAA,OAAtB,CAAjB;AACA,6CAAYH,KAAZ;AAAmBQ,QAAAA,IAAI,EAAEJ;AAAzB;;AACJ,SAAKV,cAAL;AACI,6CAAYM,KAAZ;AAAmBK,QAAAA,UAAU,qBAAMF,OAAN,CAA7B;AAA6CM,QAAAA,SAAS,EAAE;AAAxD;;AACJ,SAAKhB,UAAL;AACI,6CAAYO,KAAZ;AAAmBS,QAAAA,SAAS,EAAE;AAA9B;;AACJ;AACI,+BAAYT,KAAZ;AATR;AAWH","sourcesContent":["import {\n    DETAIL_DATA,\n    FETCH_DATA,\n    FETCH_COMPLETE,\n} from './Action'\n\nconst initialState = {\n    rooms: [],\n    users: [],\n    items: [],\n}\n\nexport default function DashboardReducer(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case DETAIL_DATA:\n            const category = state.categories.find((category) => category.id === payload);\n            return { ...state, form: category };\n        case FETCH_COMPLETE:\n            return { ...state, categories: [...payload], isLoading: false };\n        case FETCH_DATA:\n            return { ...state, isLoading: true };\n        default:\n            return { ...state };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}