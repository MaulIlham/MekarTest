{"ast":null,"code":"import _objectSpread from \"/home/enigmacamp/Materi/MateriPascal/Tugas Akhir/asd/final-project/FrontEnd/Web/LelangAja/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/home/enigmacamp/Materi/MateriPascal/Tugas Akhir/asd/final-project/FrontEnd/Web/LelangAja/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/enigmacamp/Materi/MateriPascal/Tugas Akhir/asd/final-project/FrontEnd/Web/LelangAja/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/enigmacamp/Materi/MateriPascal/Tugas Akhir/asd/final-project/FrontEnd/Web/LelangAja/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/enigmacamp/Materi/MateriPascal/Tugas Akhir/asd/final-project/FrontEnd/Web/LelangAja/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/enigmacamp/Materi/MateriPascal/Tugas Akhir/asd/final-project/FrontEnd/Web/LelangAja/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/enigmacamp/Materi/MateriPascal/Tugas Akhir/asd/final-project/FrontEnd/Web/LelangAja/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/enigmacamp/Materi/MateriPascal/Tugas Akhir/asd/final-project/FrontEnd/Web/LelangAja/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/enigmacamp/Materi/MateriPascal/Tugas Akhir/asd/final-project/FrontEnd/Web/LelangAja/src/views/categories/CategoryForm.js\";\nimport React, { Component } from 'react';\nimport { CardHeader, Col, Form, FormGroup, Input, ModalFooter, ModalBody, ModalHeader, Modal, Button, Label } from \"reactstrap\";\nimport { ON_CHANGE, SEARCH_DATA, SAVE_DATA, RESET_FORM, UPDATE_DATA, FETCH_COMPLETE, FETCH_DATA, SET_TOTAL_PAGES } from \"../../reducer/Action\";\nimport { connect } from 'react-redux';\nimport { saveCategory, getCategories } from '../../services/CategoriesService';\nimport swal from 'sweetalert';\n\nvar CategoryForm = /*#__PURE__*/function (_Component) {\n  _inherits(CategoryForm, _Component);\n\n  var _super = _createSuper(CategoryForm);\n\n  function CategoryForm(_props) {\n    var _this;\n\n    _classCallCheck(this, CategoryForm);\n\n    _this = _super.call(this, _props);\n\n    _this.AlertComponent = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var title, icon, text, alert;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                title = props.title, icon = props.icon, text = props.text;\n                _context.next = 3;\n                return swal({\n                  title: title,\n                  text: text,\n                  icon: icon,\n                  buttons: false\n                });\n\n              case 3:\n                alert = _context.sent;\n                return _context.abrupt(\"return\", alert);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleSubmit = function () {\n      var _this$props = _this.props,\n          form = _this$props.form,\n          fetchComplete = _this$props.fetchComplete,\n          setTotalPages = _this$props.setTotalPages,\n          fetchData = _this$props.fetchData,\n          resetForm = _this$props.resetForm;\n      saveCategory(form).then(function (response) {\n        fetchData();\n        getCategories(0).then(function (data) {\n          _this.toggle();\n\n          fetchComplete(data.content);\n          setTotalPages(data.totalPages);\n        });\n      });\n      resetForm();\n    };\n\n    _this.state = {\n      modal: false,\n      disabed: false,\n      buttonDisable: false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CategoryForm, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"toggleInputText\",\n    value: function toggleInputText() {\n      this.setState({\n        disabled: !this.state.disabled\n      });\n    }\n  }, {\n    key: \"cekInput\",\n    value: function cekInput() {\n      var form = this.props.form;\n\n      if (form.name.lenght === 0) {\n        this.setState({\n          buttonDisable: !this.state.buttonDisable\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          form = _this$props2.form,\n          inputChange = _this$props2.inputChange;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-align-justify\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }), \" Data Category\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"card-header-action text-dark\",\n        color: \"primary\",\n        onClick: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, \"New Category\"))), /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: 'modal-success ' + this.props.className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 45\n        }\n      }, \"New Category\")), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        className: \"form-horizontal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"room-name-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      }, \"Category Name\")), /*#__PURE__*/React.createElement(Col, {\n        xs: \"12\",\n        md: \"8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"category-name-input\",\n        name: \"category-name-input\",\n        placeholder: \"Enter Category Name\",\n        value: form.name,\n        onChange: function onChange(e) {\n          return inputChange('name', e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }\n      }))))), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.handleSubmit();\n        },\n        disabled: this.state.buttonDisable,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }, \"Save\"), ' ', /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return CategoryForm;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return _objectSpread({}, state);\n}\n\nfunction mapDispatcherToProps(dispatch) {\n  return {\n    saveData: function saveData(payload) {\n      return dispatch({\n        type: SAVE_DATA,\n        payload: payload\n      });\n    },\n    updateData: function updateData(payload) {\n      return dispatch({\n        type: UPDATE_DATA,\n        payload: payload\n      });\n    },\n    inputChange: function inputChange(inputName, inputValue) {\n      return dispatch({\n        type: ON_CHANGE,\n        payload: {\n          inputName: inputName,\n          inputValue: inputValue\n        }\n      });\n    },\n    resetForm: function resetForm() {\n      return dispatch({\n        type: RESET_FORM\n      });\n    },\n    fetchComplete: function fetchComplete(payload) {\n      return dispatch({\n        type: FETCH_COMPLETE,\n        payload: payload\n      });\n    },\n    setTotalPages: function setTotalPages(payload) {\n      return dispatch({\n        type: SET_TOTAL_PAGES,\n        payload: payload\n      });\n    },\n    fetchData: function fetchData() {\n      return dispatch({\n        type: FETCH_DATA\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatcherToProps)(CategoryForm);","map":{"version":3,"sources":["/home/enigmacamp/Materi/MateriPascal/Tugas Akhir/asd/final-project/FrontEnd/Web/LelangAja/src/views/categories/CategoryForm.js"],"names":["React","Component","CardHeader","Col","Form","FormGroup","Input","ModalFooter","ModalBody","ModalHeader","Modal","Button","Label","ON_CHANGE","SEARCH_DATA","SAVE_DATA","RESET_FORM","UPDATE_DATA","FETCH_COMPLETE","FETCH_DATA","SET_TOTAL_PAGES","connect","saveCategory","getCategories","swal","CategoryForm","props","AlertComponent","title","icon","text","buttons","alert","handleSubmit","form","fetchComplete","setTotalPages","fetchData","resetForm","then","response","data","toggle","content","totalPages","state","modal","disabed","buttonDisable","bind","setState","disabled","name","lenght","inputChange","className","e","target","value","mapStateToProps","mapDispatcherToProps","dispatch","saveData","payload","type","updateData","inputName","inputValue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  ModalFooter,\n  ModalBody,\n  ModalHeader,\n  Modal,\n  Button, Label,\n} from \"reactstrap\";\nimport { ON_CHANGE, SEARCH_DATA, SAVE_DATA, RESET_FORM, UPDATE_DATA, FETCH_COMPLETE, FETCH_DATA, SET_TOTAL_PAGES } from \"../../reducer/Action\";\nimport { connect } from 'react-redux'\nimport { saveCategory, getCategories } from '../../services/CategoriesService';\nimport swal from 'sweetalert'\n\nclass CategoryForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      disabed: false,\n      buttonDisable: false,\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({ modal: !this.state.modal })\n  }\n\n  toggleInputText() {\n    this.setState({ disabled: !this.state.disabled })\n  }\n\n\n  AlertComponent = async (props) => {\n    const { title, icon, text } = props\n    const alert = await swal({\n      title: title,\n      text: text,\n      icon: icon,\n      buttons: false,\n    })\n    return alert\n  }\n\n  cekInput() {\n    const { form } = this.props;\n    if (form.name.lenght === 0) {\n      this.setState({ buttonDisable: !this.state.buttonDisable })\n    }\n  }\n\n  handleSubmit = () => {\n    const { form, fetchComplete, setTotalPages, fetchData, resetForm } = this.props\n    saveCategory(form)\n      .then(response => {\n        fetchData()\n        getCategories(0)\n          .then(data => {\n            this.toggle()\n            fetchComplete(data.content)\n            setTotalPages(data.totalPages)\n          })\n      });\n    resetForm();\n  }\n\n  render() {\n    const { form, inputChange } = this.props;\n\n    return (\n      <div className=\"animated fadeIn\">\n        <CardHeader>\n          <i className=\"fa fa-align-justify\"></i> Data Category\n          <div className=\"card-header-actions\">\n            <Button className=\"card-header-action text-dark\" color=\"primary\" onClick={this.toggle}>New Category</Button>\n          </div>\n        </CardHeader>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={'modal-success ' + this.props.className}>\n          <ModalHeader toggle={this.toggle}><strong>New Category</strong></ModalHeader>\n          <ModalBody>\n            <Form className=\"form-horizontal\">\n              <FormGroup row>\n                <Col md=\"4\">\n                  <Label htmlFor=\"room-name-input\">Category Name</Label>\n                </Col>\n                <Col xs=\"12\" md=\"8\">\n                  <Input type=\"text\"\n                    id=\"category-name-input\" name=\"category-name-input\"\n                    placeholder=\"Enter Category Name\" value={form.name}\n                    onChange={(e) => inputChange('name', e.target.value)}\n                  />\n                </Col>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n          <ModalFooter>\n            <Button type=\"submit\" color=\"primary\" onClick={() => this.handleSubmit()} disabled={this.state.buttonDisable}>Save</Button>{' '}\n            {/* <Button color=\"primary\" onClick={() => this.toggleInputText()}>Edit</Button>{' '} */}\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { ...state };\n}\n\nfunction mapDispatcherToProps(dispatch) {\n  return {\n    saveData: (payload) => dispatch({ type: SAVE_DATA, payload }),\n    updateData: (payload) => dispatch({ type: UPDATE_DATA, payload }),\n    inputChange: (inputName, inputValue) => dispatch({ type: ON_CHANGE, payload: { inputName, inputValue } }),\n    resetForm: () => dispatch({ type: RESET_FORM }),\n    fetchComplete: (payload) => dispatch({ type: FETCH_COMPLETE, payload }),\n    setTotalPages: (payload) => dispatch({ type: SET_TOTAL_PAGES, payload }),\n    fetchData: () => dispatch({ type: FETCH_DATA }),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatcherToProps)(CategoryForm);\n"]},"metadata":{},"sourceType":"module"}