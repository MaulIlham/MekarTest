{"ast":null,"code":"import _toConsumableArray from\"/home/enigmacamp/Materi/MateriPascal/Tugas Akhir/asd/final-project/FrontEnd/Web/LelangAja/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/enigmacamp/Materi/MateriPascal/Tugas Akhir/asd/final-project/FrontEnd/Web/LelangAja/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{DETAIL_DATA,FETCH_DATA,FETCH_COMPLETE}from'./Action';var initialState={rooms:[],users:[],items:[],histories:[],room:'',user:'',item:'',isLoading:true};export default function DashboardReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload;switch(type){case DETAIL_DATA:var category=state.categories.find(function(category){return category.id===payload;});return _objectSpread(_objectSpread({},state),{},{form:category});case'FETCH_ROOM':return _objectSpread(_objectSpread({},state),{},{rooms:_toConsumableArray(payload)});case'FETCH_USER':return _objectSpread(_objectSpread({},state),{},{users:_toConsumableArray(payload)});case'FETCH_ITEM':return _objectSpread(_objectSpread({},state),{},{items:_toConsumableArray(payload)});case'COUNT_ITEM':return _objectSpread(_objectSpread({},state),{},{item:payload});case'COUNT_ROOM':return _objectSpread(_objectSpread({},state),{},{room:payload});case'COUNT_USER':return _objectSpread(_objectSpread({},state),{},{user:payload});case FETCH_COMPLETE:return _objectSpread(_objectSpread({},state),{},{histories:_toConsumableArray(payload),isLoading:false});case FETCH_DATA:return _objectSpread(_objectSpread({},state),{},{isLoading:true});default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/home/enigmacamp/Materi/MateriPascal/Tugas Akhir/asd/final-project/FrontEnd/Web/LelangAja/src/reducer/DashboardReducer.js"],"names":["DETAIL_DATA","FETCH_DATA","FETCH_COMPLETE","initialState","rooms","users","items","histories","room","user","item","isLoading","DashboardReducer","state","action","type","payload","category","categories","find","id","form"],"mappings":"uaAAA,OACIA,WADJ,CAEIC,UAFJ,CAGIC,cAHJ,KAIO,UAJP,CAMA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,KAAK,CAAE,EADU,CAEjBC,KAAK,CAAE,EAFU,CAGjBC,KAAK,CAAE,EAHU,CAIjBC,SAAS,CAAE,EAJM,CAKjBC,IAAI,CAAE,EALW,CAMjBC,IAAI,CAAE,EANW,CAOjBC,IAAI,CAAE,EAPW,CAQjBC,SAAS,CAAE,IARM,CAArB,CAYA,cAAe,SAASC,CAAAA,gBAAT,EAAwD,IAA9BC,CAAAA,KAA8B,2DAAtBV,YAAsB,IAARW,CAAAA,MAAQ,8CAC3DC,CAAAA,IAD2D,CACzCD,MADyC,CAC3DC,IAD2D,CACrDC,OADqD,CACzCF,MADyC,CACrDE,OADqD,CAGnE,OAAQD,IAAR,EACI,IAAKf,CAAAA,WAAL,CACI,GAAMiB,CAAAA,QAAQ,CAAGJ,KAAK,CAACK,UAAN,CAAiBC,IAAjB,CAAsB,SAACF,QAAD,QAAcA,CAAAA,QAAQ,CAACG,EAAT,GAAgBJ,OAA9B,EAAtB,CAAjB,CACA,sCAAYH,KAAZ,MAAmBQ,IAAI,CAAEJ,QAAzB,GACJ,IAAK,YAAL,CACI,sCAAYJ,KAAZ,MAAmBT,KAAK,oBAAMY,OAAN,CAAxB,GACJ,IAAK,YAAL,CACI,sCAAYH,KAAZ,MAAmBR,KAAK,oBAAMW,OAAN,CAAxB,GACJ,IAAK,YAAL,CACI,sCAAYH,KAAZ,MAAmBP,KAAK,oBAAMU,OAAN,CAAxB,GACJ,IAAK,YAAL,CACI,sCAAYH,KAAZ,MAAmBH,IAAI,CAAEM,OAAzB,GACJ,IAAK,YAAL,CACI,sCAAYH,KAAZ,MAAmBL,IAAI,CAAEQ,OAAzB,GACJ,IAAK,YAAL,CACI,sCAAYH,KAAZ,MAAmBJ,IAAI,CAAEO,OAAzB,GACJ,IAAKd,CAAAA,cAAL,CACI,sCAAYW,KAAZ,MAAmBN,SAAS,oBAAMS,OAAN,CAA5B,CAA4CL,SAAS,CAAE,KAAvD,GACJ,IAAKV,CAAAA,UAAL,CACI,sCAAYY,KAAZ,MAAmBF,SAAS,CAAE,IAA9B,GACJ,QACI,wBAAYE,KAAZ,EArBR,CAuBH","sourcesContent":["import {\n    DETAIL_DATA,\n    FETCH_DATA,\n    FETCH_COMPLETE,\n} from './Action'\n\nconst initialState = {\n    rooms: [],\n    users: [],\n    items: [],\n    histories: [],\n    room: '',\n    user: '',\n    item: '',\n    isLoading: true,\n\n}\n\nexport default function DashboardReducer(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case DETAIL_DATA:\n            const category = state.categories.find((category) => category.id === payload);\n            return { ...state, form: category };\n        case 'FETCH_ROOM':\n            return { ...state, rooms: [...payload] };\n        case 'FETCH_USER':\n            return { ...state, users: [...payload] };\n        case 'FETCH_ITEM':\n            return { ...state, items: [...payload] };\n        case 'COUNT_ITEM':\n            return { ...state, item: payload };\n        case 'COUNT_ROOM':\n            return { ...state, room: payload };\n        case 'COUNT_USER':\n            return { ...state, user: payload };\n        case FETCH_COMPLETE:\n            return { ...state, histories: [...payload], isLoading: false };\n        case FETCH_DATA:\n            return { ...state, isLoading: true };\n        default:\n            return { ...state };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}