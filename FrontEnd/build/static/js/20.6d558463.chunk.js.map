{"version":3,"sources":["shared/BaseUrl.js","reducer/Action.js","shared/MyHeaders.js","component/PageComponent.js","reducer/CategoryReducer.js","services/CategoriesService.js","views/categories/CategoryTable.js","views/categories/CategoryForm.js","views/categories/Category.js"],"names":["BaseUrl","SAVE_DATA","UPDATE_DATA","DELETE_DATA","RESET_FORM","SEARCH_DATA","DETAIL_DATA","FETCH_COMPLETE","FETCH_DATA","ON_CHANGE","HANDLE_PAGE_CHANGE","SET_TOTAL_PAGES","myHeaders","Authorization","localStorage","getItem","PageComponent","props","totalPages","getData","page","index","push","onClick","previous","tag","map","p","next","defaulFormValue","id","name","initialState","categories","form","disabled","isLoading","seacrh","CategoryReducer","state","action","type","payload","concat","category","filter","find","inputName","inputValue","getCategories","a","Axios","get","headers","data","console","log","saveCategory","post","status","deleteCategory","delete","CategoryTable","i","fetchComplete","fetchData","setTotalPages","then","content","catch","err","handleDetail","categoryId","detailData","handleDelete","deleteData","response","toggleModal","setState","modal","generateTableRows","rows","colSpan","className","length","Spinner","color","key","Button","this","CardBody","Table","hover","bordered","striped","responsive","size","Component","connect","dispatch","CategoryForm","AlertComponent","title","icon","text","swal","buttons","alert","handleSubmit","resetForm","toggle","disabed","buttonDisable","bind","lenght","inputChange","CardHeader","Modal","isOpen","ModalHeader","ModalBody","Form","FormGroup","row","Col","md","Label","htmlFor","xs","Input","placeholder","value","onChange","e","target","ModalFooter","saveData","updateData","Category","categoryStore","createStore","store","Row","Card"],"mappings":"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","file":"static/js/20.6d558463.chunk.js","sourcesContent":["\nconst BaseUrl = 'http://10.10.13.71:8845'\n\nexport {\n    BaseUrl\n}","const SAVE_DATA = 1;\nconst UPDATE_DATA = 2;\nconst DELETE_DATA = 3;\nconst EDIT_DATA = 4;\nconst RESET_FORM = 5;\nconst SEARCH_DATA = 6;\nconst DETAIL_DATA = 7;\nconst FETCH_COMPLETE = 8;\nconst FETCH_DATA = 9;\nconst ON_CHANGE = 10;\nconst HANDLE_PAGE_CHANGE = 11;\nconst SET_TOTAL_PAGES = 12;\n\n\nexport {\n  SAVE_DATA,\n  UPDATE_DATA,\n  DELETE_DATA,\n  EDIT_DATA,\n  RESET_FORM,\n  SEARCH_DATA,\n  DETAIL_DATA,\n  FETCH_DATA,\n  FETCH_COMPLETE,\n  ON_CHANGE,\n  HANDLE_PAGE_CHANGE,\n  SET_TOTAL_PAGES,\n}\n","const myHeaders={\n    Authorization: `Bearer ${localStorage.getItem('@token')}`,\n}\nexport{\n    myHeaders\n}","import React from 'react'\nimport { Button, PaginationItem, Pagination, PaginationLink } from \"reactstrap\";\n\n\n  const PageComponent=(props)=>{\n    const {totalPages, getData}=props;\n    let page=[];\n    for (let index = 0; index < totalPages; index++) {\n      page.push(\n      <PaginationItem>\n        <PaginationLink onClick={()=>getData(index)}>{index+1}</PaginationLink>\n      </PaginationItem>)\n    }\n    return(          \n    <nav>\n      <Pagination>\n        <PaginationItem><PaginationLink previous tag=\"button\">Prev</PaginationLink></PaginationItem>\n          {\n            page.map(p=>{\n              return p\n            })\n          }\n        <PaginationItem><PaginationLink next tag=\"button\">Next</PaginationLink></PaginationItem>\n      </Pagination>\n    </nav>)\n  }\n\n  export default PageComponent","import { SAVE_DATA,\n  UPDATE_DATA,\n  DELETE_DATA,\n  EDIT_DATA,\n  RESET_FORM,\n  SEARCH_DATA,\n  DETAIL_DATA,\n  FETCH_DATA,\n  FETCH_COMPLETE,\n  ON_CHANGE,\n  SET_TOTAL_PAGES,} from './Action'\nconst defaulFormValue={\n  id:'',\n  name:'',\n};\nconst initialState={\n  categories:[],\n  form:{ ...defaulFormValue},\n  disabled: false,\n  isLoading: true,\n  seacrh: '',\n  totalPages:0,\n}\n\nexport default function CategoryReducer(state=initialState,action) {\n  const {type, payload}= action;\n\n  switch (type) {\n    case SAVE_DATA:\n      return{ ...state, categories: state.categories.concat([ { ...payload } ])};\n    case UPDATE_DATA:\n      return{ ...state, categories: state.categories.map((category)=> category.id === payload.id ? { ...payload } : category)};\n    case DELETE_DATA:\n      return{ ...state, categories: state.categories.filter( (category)=> category.id !== payload)};\n    case DETAIL_DATA:\n      const category = state.categories.find((category) => category.id === payload);\n      return{ ...state, form: category};\n    case RESET_FORM:\n      return{ ...state, form: { ...defaulFormValue}};\n    case ON_CHANGE:\n      const {inputName, inputValue}=payload;\n      const form={ ...state.form};\n      form[inputName]=inputValue;\n      return{ ...state, form: { ...form}};\n    case SEARCH_DATA:\n      return{ ...state, seacrh: payload};\n    case FETCH_COMPLETE:\n      return{ ...state, categories: [ ...payload], isLoading: false};\n    case FETCH_DATA:\n      return{ ...state, isLoading: true};\n    case SET_TOTAL_PAGES:\n      return{ ...state, totalPages:payload};\n    default:\n      return{ ...state};\n  }\n}\n","import Axios from \"axios\"\nimport { BaseUrl } from \"../shared/BaseUrl\"\nimport { myHeaders } from \"../shared/MyHeaders\"\n\nconst getCategories=async(page)=>{\n    const { data } = await Axios.get(`${BaseUrl}/categories?page=${page}&size=10`,{\n        headers:myHeaders\n    })\n    console.log('categori',data);\n    \n    return data\n}\n\nconst saveCategory=async(category)=>{\n    const response = await Axios.post(`${BaseUrl}/category`, category, {\n        headers:myHeaders\n    })\n    if(response.status===200)return true\n}\n\nconst deleteCategory=async(id)=>{\n    const response = await Axios.delete(`${BaseUrl}/category/${id}`, {\n        headers:myHeaders\n    })\n    if(response.status===200)return true\n}\n\nexport{\n    getCategories,\n    saveCategory,\n    deleteCategory,\n}","import React, { Component } from 'react';\nimport { Button, Spinner, Card, CardBody, CardHeader, Col, Pagination, PaginationItem, PaginationLink, Row, Table } from 'reactstrap';\nimport { EDIT_DATA, DETAIL_DATA, FETCH_DATA, FETCH_COMPLETE, DELETE_DATA, SET_TOTAL_PAGES } from \"../../reducer/Action\";\nimport { connect } from 'react-redux'\nimport { getCategories, deleteCategory } from '../../services/CategoriesService';\nimport PageComponent from '../../component/PageComponent';\n\nclass CategoryTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n    }\n  }\n\n  componentDidMount() {\n    this.getData(0)\n  }\n\n  getData = (i) => {\n    const { fetchComplete, fetchData, setTotalPages } = this.props;\n    fetchData()\n    getCategories(i)\n      .then(data => {\n        fetchComplete(data.content)\n        setTotalPages(data.totalPages)\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  handleDetail = (categoryId) => {\n    const { detailData } = this.props;\n  }\n\n  handleDelete = (categoryId) => {\n    const { deleteData } = this.props;\n    deleteCategory(categoryId)\n      .then(response => {\n        if (response) this.getData(0)\n      })\n  }\n\n  toggleModal = () => {\n    this.setState({ modal: !this.state.modal })\n  }\n\n  generateTableRows = () => {\n    const { categories } = this.props;\n\n    let rows = (\n      <tr>\n        <td colSpan=\"3\" className=\"table-warning text-center\"><strong><em>Data Still Empty</em></strong></td>\n      </tr>\n    );\n\n    if (categories.length > 0) {\n      rows = <tr><td colSpan=\"2\" className=\"table-warning text-center\"><Spinner color={\"danger\"}></Spinner></td></tr>\n      if (!this.props.isLoading) {\n        rows = categories.map((category, index) => {\n          return (\n            <tr key={index}>\n              <td className=\"text-center\">{index + 1}</td>\n              <td className=\"text-center\">{category.name}</td>\n              <td className=\"text-center\"><Button type=\"button\" color=\"danger\" className=\"shadow\" onClick={() => this.handleDelete(category.id)}>Delete</Button></td>\n            </tr>\n          )\n        });\n      };\n    }\n    return rows;\n  }\n\n  render() {\n    const { form, totalPages } = this.props\n    return (\n      <div className=\"animated fadeIn\">\n        <CardBody>\n          <Table hover bordered striped responsive size=\"sm\">\n            <thead>\n              <tr>\n                <th className=\"text-center\">No.</th>\n                <th className=\"text-center\">Name</th>\n                <th className='text-center'>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.generateTableRows()}\n            </tbody>\n          </Table>\n          <PageComponent totalPages={totalPages} getData={this.getData} />\n        </CardBody>\n      </div>\n\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { ...state };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    detailData: (payload) => dispatch({ type: DETAIL_DATA, payload }),\n    deleteData: (payload) => dispatch({ type: DELETE_DATA, payload }),\n    fetchData: () => dispatch({ type: FETCH_DATA }),\n    fetchComplete: (payload) => dispatch({ type: FETCH_COMPLETE, payload }),\n    setTotalPages: (payload) => dispatch({ type: SET_TOTAL_PAGES, payload }),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryTable);\n","import React, { Component } from 'react';\nimport {\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  ModalFooter,\n  ModalBody,\n  ModalHeader,\n  Modal,\n  Button, Label,\n} from \"reactstrap\";\nimport { ON_CHANGE, SEARCH_DATA, SAVE_DATA, RESET_FORM, UPDATE_DATA, FETCH_COMPLETE, FETCH_DATA, SET_TOTAL_PAGES } from \"../../reducer/Action\";\nimport { connect } from 'react-redux'\nimport { saveCategory, getCategories } from '../../services/CategoriesService';\nimport swal from 'sweetalert'\n\nclass CategoryForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      disabed: false,\n      buttonDisable: false,\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({ modal: !this.state.modal })\n  }\n\n  toggleInputText() {\n    this.setState({ disabled: !this.state.disabled })\n  }\n\n\n  AlertComponent = async (props) => {\n    const { title, icon, text } = props\n    const alert = await swal({\n      title: title,\n      text: text,\n      icon: icon,\n      buttons: false,\n    })\n    return alert\n  }\n\n  cekInput() {\n    const { form } = this.props;\n    if (form.name.lenght === 0) {\n      this.setState({ buttonDisable: !this.state.buttonDisable })\n    }\n  }\n\n  handleSubmit = () => {\n    const { form, fetchComplete, setTotalPages, fetchData, resetForm } = this.props\n    saveCategory(form)\n      .then(response => {\n        fetchData()\n        getCategories(0)\n          .then(data => {\n            this.toggle()\n            fetchComplete(data.content)\n            setTotalPages(data.totalPages)\n          })\n      });\n    resetForm();\n  }\n\n  render() {\n    const { form, inputChange } = this.props;\n\n    return (\n      <div className=\"animated fadeIn\">\n        <CardHeader>\n          <i className=\"fa fa-align-justify\"></i> Data Category\n          <div className=\"card-header-actions\">\n            <Button className=\"card-header-action text-dark\" color=\"primary\" onClick={this.toggle}>New Category</Button>\n          </div>\n        </CardHeader>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={'modal-success ' + this.props.className}>\n          <ModalHeader toggle={this.toggle}><strong>New Category</strong></ModalHeader>\n          <ModalBody>\n            <Form className=\"form-horizontal\">\n              <FormGroup row>\n                <Col md=\"4\">\n                  <Label htmlFor=\"room-name-input\">Category Name</Label>\n                </Col>\n                <Col xs=\"12\" md=\"8\">\n                  <Input type=\"text\"\n                    id=\"category-name-input\" name=\"category-name-input\"\n                    placeholder=\"Enter Category Name\" value={form.name}\n                    onChange={(e) => inputChange('name', e.target.value)}\n                  />\n                </Col>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n          <ModalFooter>\n            <Button type=\"submit\" color=\"primary\" onClick={() => this.handleSubmit()} disabled={this.state.buttonDisable}>Save</Button>{' '}\n            {/* <Button color=\"primary\" onClick={() => this.toggleInputText()}>Edit</Button>{' '} */}\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { ...state };\n}\n\nfunction mapDispatcherToProps(dispatch) {\n  return {\n    saveData: (payload) => dispatch({ type: SAVE_DATA, payload }),\n    updateData: (payload) => dispatch({ type: UPDATE_DATA, payload }),\n    inputChange: (inputName, inputValue) => dispatch({ type: ON_CHANGE, payload: { inputName, inputValue } }),\n    resetForm: () => dispatch({ type: RESET_FORM }),\n    fetchComplete: (payload) => dispatch({ type: FETCH_COMPLETE, payload }),\n    setTotalPages: (payload) => dispatch({ type: SET_TOTAL_PAGES, payload }),\n    fetchData: () => dispatch({ type: FETCH_DATA }),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatcherToProps)(CategoryForm);\n","import React, { Component } from 'react';\nimport { Button, Card, CardBody, CardHeader, Col, Pagination, PaginationItem, PaginationLink, Row, Table } from 'reactstrap';\nimport {Provider} from 'react-redux'\nimport {createStore} from \"redux\";\nimport CategoryReducer from \"../../reducer/CategoryReducer\";\nimport CategoryTable from \"./CategoryTable\";\nimport CategoryForm from \"./CategoryForm\";\n\nexport default class Category extends Component{\n\n  render() {\n    const categoryStore = createStore(CategoryReducer)\n    return(\n      <div className=\"animated fadeIn\">\n        <Provider store={categoryStore}>\n        <Row>\n          <Col>\n            <Card>\n              <CategoryForm/>\n              <CardBody>\n                  <CategoryTable/>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        </Provider>\n      </div>\n    )\n  }\n\n\n}\n"],"sourceRoot":""}